name: CI

on:
  pull_request:
  # Limit because of parallel ngrok max tunnels on integration tests.
  push:
    branches:
      - master

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    # Execute the checks inside the container instead the VM.
    container: golangci/golangci-lint:v1.57.2-alpine
    steps:
      - uses: actions/checkout@v4
      - run: |
          # We need this go flag because it started to error after golangci-lint is using Go 1.21.
          # TODO(slok): Remove it on next (>1.54.1) golangci-lint upgrade to check if this problem has gone.
          export GOFLAGS="-buildvcs=false"
          ./hack/scripts/check.sh

  unit-test:
    name: Unit test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
      - run: make ci-unit-test

  integration-test:
    name: Integration test
    runs-on: ubuntu-latest
    needs: [check, unit-test]
    strategy:
      max-parallel: 1 # Due to ngrok account limits.
      matrix:
        kubernetes: [1.26.14, 1.27.11, 1.28.7, 1.29.2]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
      - name: Execute tests
        env:
          KIND_VERSION: v0.22.0
          NGROK_SSH_PRIVATE_KEY_B64: ${{secrets.NGROK_SSH_PRIVATE_KEY_B64}}
        run: |
          # Prepare access.
          mkdir -p ~/.ssh/
          echo -e "Host tunnel.us.ngrok.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
          echo -e ${NGROK_SSH_PRIVATE_KEY_B64} | base64 -d > ~/.ssh/id_ed25519
          chmod 400 ~/.ssh/id_ed25519

          # Download dependencies.
          curl -Lo kind https://github.com/kubernetes-sigs/kind/releases/download/${KIND_VERSION}/kind-linux-amd64 && chmod +x kind && sudo mv kind /usr/local/bin/
          curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v${{ matrix.kubernetes }}/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
          curl -Lo /tmp/ngrok.zip https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip && unzip -o /tmp/ngrok.zip -d /tmp && sudo mv /tmp/ngrok /usr/local/bin/ && rm -rf /tmp/ngrok.zip

          # Execute tests.
          KUBERNETES_VERSION=${{ matrix.kubernetes }} NGROK=true make ci-integration-test
