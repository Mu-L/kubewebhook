// Code generated by client-gen. DO NOT EDIT.

package v1

import (
	"context"

	v1 "github.com/slok/kubewebhook/v2/test/integration/crd/apis/building/v1"
	scheme "github.com/slok/kubewebhook/v2/test/integration/crd/client/clientset/versioned/scheme"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// HousesGetter has a method to return a HouseInterface.
// A group's client should implement this interface.
type HousesGetter interface {
	Houses(namespace string) HouseInterface
}

// HouseInterface has methods to work with House resources.
type HouseInterface interface {
	Create(ctx context.Context, house *v1.House, opts metav1.CreateOptions) (*v1.House, error)
	Update(ctx context.Context, house *v1.House, opts metav1.UpdateOptions) (*v1.House, error)
	Delete(ctx context.Context, name string, opts metav1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts metav1.DeleteOptions, listOpts metav1.ListOptions) error
	Get(ctx context.Context, name string, opts metav1.GetOptions) (*v1.House, error)
	List(ctx context.Context, opts metav1.ListOptions) (*v1.HouseList, error)
	Watch(ctx context.Context, opts metav1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts metav1.PatchOptions, subresources ...string) (result *v1.House, err error)
	HouseExpansion
}

// houses implements HouseInterface
type houses struct {
	*gentype.ClientWithList[*v1.House, *v1.HouseList]
}

// newHouses returns a Houses
func newHouses(c *BuildingV1Client, namespace string) *houses {
	return &houses{
		gentype.NewClientWithList[*v1.House, *v1.HouseList](
			"houses",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *v1.House { return &v1.House{} },
			func() *v1.HouseList { return &v1.HouseList{} }),
	}
}
